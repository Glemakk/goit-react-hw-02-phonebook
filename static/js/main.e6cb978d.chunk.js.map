{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Container/Container.sstyled.jsx","components/Container/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CustomButton","styled","button","Button","onClick","text","Form","form","InputDiv","div","Input","input","ContactForm","handleChange","target","value","name","setState","this","props","onSubmit","onChange","number","Provider","size","type","pattern","title","required","autoComplete","Component","List","ul","Item","li","ContactList","state","isShow","show","contacts","map","contact","id","FilterContainer","Filter","filter","placeholder","ContainerCustom","Container","children","App","currentTarget","handleSubmit","e","preventDefault","randomID","uuidv4","find","includes","alert","clearForm","getVisibleContacts","normalizedFilter","toLowerCase","item","deleteContact","contactId","prevState","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRACaA,EAAeC,IAAOC,OAAV,4hB,OCMVC,I,cAAAA,EAJf,YAAoC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACzB,OAAO,cAACL,EAAD,CAAcI,QAASA,EAAvB,SAAiCC,K,cCF7BC,EAAOL,IAAOM,KAAV,mEAGJC,EAAWP,IAAOQ,IAAV,8CAGRC,EAAQT,IAAOU,MAAV,4RCDGC,E,4MACnBC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACVC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,SAAL,eACGD,EAAOD,K,4CAIZ,WACE,MAA6CG,KAAKC,MAA1CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUL,EAA5B,EAA4BA,KAAMM,EAAlC,EAAkCA,OAClC,OACE,8BACE,eAAChB,EAAD,CAAMc,SAAUA,EAAhB,UACE,kCACE,sCACA,eAACZ,EAAD,WACE,cAAC,IAAYe,SAAb,CAAsBR,MAAO,CAAES,KAAM,QAArC,SACE,cAAC,IAAD,MAFJ,OAKE,cAACd,EAAD,CACEe,KAAK,OACLT,KAAK,OACLD,MAAOC,EACPK,SAAUA,EACVK,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,aAAa,cAKnB,kCACE,wCACA,eAACrB,EAAD,WACE,cAAC,IAAYe,SAAb,CAAsBR,MAAO,CAAES,KAAM,QAArC,SACE,cAAC,IAAD,MAFJ,OAKE,cAACd,EAAD,CACEe,KAAK,MACLT,KAAK,SACLD,MAAOO,EACPD,SAAUA,EACVK,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,EACRC,aAAa,cAInB,cAAC,EAAD,CAAQxB,KAAK,yB,GAtDkByB,aCL5BC,EAAO9B,IAAO+B,GAAV,6HAMJC,EAAOhC,IAAOiC,GAAV,+KCJIC,E,4MACnBC,MAAQ,CACNC,QAAQ,G,EAGVC,KAAO,WACL,EAAKrB,SAAS,CACZoB,QAAQ,K,4CAGZ,WACE,MAA8BnB,KAAKC,MAA3BoB,EAAR,EAAQA,SAAUnC,EAAlB,EAAkBA,QAECc,KAAKkB,MAAhBC,OACR,OACE,cAACN,EAAD,UACGQ,EAASC,KAAI,SAACC,GAAD,OACZ,eAACR,EAAD,WACGQ,EAAQzB,KADX,KACmByB,EAAQnB,OACzB,cAAC,EAAD,CACEG,KAAK,SACLpB,KAAK,SACLD,QAAS,kBAAMA,EAAQqC,EAAQC,SALxBD,EAAQC,a,GAjBYZ,aCF5Ba,EAAkB1C,IAAOQ,IAAV,8CCKb,SAASmC,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,OAAQxB,EAAY,EAAZA,SACvC,OACE,gCACE,eAACsB,EAAD,WACE,uDACA,eAACnC,EAAD,WACE,cAAC,IAAYe,SAAb,CAAsBR,MAAO,CAAES,KAAM,QAArC,SACE,cAAC,IAAD,MAFJ,OAKE,cAACd,EAAD,CACEe,KAAK,OACLT,KAAK,SACLD,MAAO8B,EACPxB,SAAUA,EACVyB,YAAY,iBACZjB,aAAa,gBCrBlB,IAAMkB,EAAkB9C,IAAOQ,IAAV,kRCIbuC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAACF,EAAD,UAAkBE,K,QCINC,E,4MACnBd,MAAQ,CACNG,SAAU,CAAC,CAAEG,GAAI,OAAQ1B,KAAM,gBAAiBM,OAAQ,cACxDuB,OAAQ,I,EAOVhC,aAAe,YAAwB,IAArBsC,EAAoB,EAApBA,cACVpC,EAAQoC,EAAcpC,MACtBC,EAAOmC,EAAcnC,KAE3B,EAAKC,SAAL,eACGD,EAAOD,K,EAUZqC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAWC,cAEjB,EAAmC,EAAKpB,MAAhCpB,EAAR,EAAQA,KAAMM,EAAd,EAAcA,OAAQiB,EAAtB,EAAsBA,SAKFA,EAASkB,MAAK,SAAChB,GAAD,OAAaA,EAAQzB,KAAK0C,SAAS1C,MAGjE2C,MAAM,GAAD,OAAI3C,EAAJ,4BACL,EAAKC,SAAS,CACZsB,SAAS,GAAD,mBAAMA,GAAN,CAAgB,CAAEG,GAAIa,EAAUvC,KAAMA,EAAMM,OAAQA,OAElE,EAAKsC,a,EAGPA,UAAY,WACV,EAAK3C,SAAS,CAAEK,OAAQ,GAAIN,KAAM,M,EAGpC6C,mBAAqB,WACnB,MAA6B,EAAKzB,MAA1BS,EAAR,EAAQA,OAAQN,EAAhB,EAAgBA,SACVuB,EAAmBjB,EAAOkB,cAChC,OAAOxB,EAASM,QAAO,SAACmB,GAAD,OACrBA,EAAKhD,KAAK+C,cAAcL,SAASI,O,EAIrCG,cAAgB,SAACC,GACf,EAAKjD,UAAS,SAACkD,GAAD,MAAgB,CAC5B5B,SAAU4B,EAAU5B,SAASM,QAC3B,SAACJ,GAAD,OAAaA,EAAQC,KAAOwB,U,4CAKlC,WACE,MAAiChD,KAAKkB,MAA9BpB,EAAR,EAAQA,KAAMM,EAAd,EAAcA,OAAQuB,EAAtB,EAAsBA,OAChBuB,EAAkBlD,KAAK2C,qBAC7B,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CACEzC,SAAUF,KAAKkC,aAEfpC,KAAMA,EACNM,OAAQA,EACRD,SAAUH,KAAKL,eAGjB,0CACA,cAAC+B,EAAD,CAAQvB,SAAUH,KAAKL,aAAcgC,OAAQA,IAC7C,cAAC,EAAD,CAAaN,SAAU6B,EAAiBhE,QAASc,KAAK+C,uB,GAhF7BnC,aCKlBuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6cb978d.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const CustomButton = styled.button`\r\n  font-weight: 400;\r\n  line-height: 1.33;\r\n\r\n  background-color: orange;\r\n  margin-top: 15px;\r\n  margin-left: 27px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\r\n    0px 2px 1px rgb(0 0 0 / 20%);\r\n    &:focus,\r\n  &:hover {\r\n    box-shadow: 2px 3px 17px 0px rgb(0 0 0 / 78%), -1px 0px 2px rgb(0 0 0 / 14%), 0px 2px 1px rgb(0 0 0 / 20%);\r\n    transition: box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`\r\n","import React from 'react'\r\nimport { CustomButton } from './Button.styled'\r\n\r\nfunction Button({ onClick, text }) {\r\n  return <CustomButton onClick={onClick}>{text}</CustomButton>\r\n}\r\n\r\nexport default Button\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Form = styled.form`background - color: #fff;\r\npadding: 15px;`\r\n\r\nexport const InputDiv = styled.div`\r\n  display: flex;\r\n`\r\nexport const Input = styled.input`\r\n \r\n  padding: 3px 10px;\r\n border: 2px solid rgba(33, 33, 33, 0.2);\r\n box-sizing: border-box;\r\n  border-radius: 4px;\r\n  &:focus,\r\n  &:hover {\r\n    border-color: #00adffa8;\r\n    outline: none;\r\n    transition: border-color 350ms cubic-bezier(0.4, 0, 0.2, 1);`\r\n","import React, { Component } from 'react'\r\nimport Button from '../Button/Button'\r\n// import { List } from './ContactForm.styled'\r\nimport { FcPhoneAndroid, FcBusinessContact } from 'react-icons/fc'\r\nimport { IconContext } from 'react-icons'\r\nimport { Form, InputDiv, Input } from './ContactForm.styled'\r\n\r\nexport default class ContactForm extends Component {\r\n  handleChange = ({ target }) => {\r\n    const value = target.value\r\n    const name = target.name\r\n    // console.log('value=>', value)\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { onSubmit, onChange, name, number } = this.props\r\n    return (\r\n      <div>\r\n        <Form onSubmit={onSubmit}>\r\n          <label>\r\n            <h2>Name</h2>\r\n            <InputDiv>\r\n              <IconContext.Provider value={{ size: '23px' }}>\r\n                <FcBusinessContact />\r\n              </IconContext.Provider>\r\n              &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={onChange}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                autoComplete=\"off\"\r\n              />\r\n            </InputDiv>\r\n          </label>\r\n\r\n          <label>\r\n            <h2>Number</h2>\r\n            <InputDiv>\r\n              <IconContext.Provider value={{ size: '23px' }}>\r\n                <FcPhoneAndroid />\r\n              </IconContext.Provider>\r\n              &nbsp;\r\n              <Input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={onChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                autoComplete=\"off\"\r\n              />\r\n            </InputDiv>\r\n          </label>\r\n          <Button text=\"Add contact\" />\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const List = styled.ul`\r\n  border-radius: 4px;\r\n  padding: 24px;\r\n  //   background-color: #7c7c7c;\r\n  //   color: #fff;\r\n`\r\nexport const Item = styled.li`\r\n  display: flex;\r\n\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  font-weight: normal;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n`\r\n","import React, { Component } from 'react'\r\nimport { List, Item } from './ContactList.styled'\r\nimport Button from '../Button/Button'\r\n\r\nexport default class ContactList extends Component {\r\n  state = {\r\n    isShow: false,\r\n  }\r\n\r\n  show = () => {\r\n    this.setState({\r\n      isShow: true,\r\n    })\r\n  }\r\n  render() {\r\n    const { contacts, onClick } = this.props\r\n    // console.log(contacts)\r\n    const { isShow } = this.state\r\n    return (\r\n      <List>\r\n        {contacts.map((contact) => (\r\n          <Item key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <Button\r\n              type=\"button\"\r\n              text=\"Delete\"\r\n              onClick={() => onClick(contact.id)}\r\n            />\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const FilterContainer = styled.div`\r\n  padding: 15px;\r\n`\r\n","import React from 'react'\r\nimport { FcSearch } from 'react-icons/fc'\r\nimport { InputDiv } from '../ContactForm/ContactForm.styled'\r\nimport { Input } from '../ContactForm/ContactForm.styled'\r\nimport { FilterContainer } from './Filter.styled'\r\nimport { IconContext } from 'react-icons'\r\n\r\nexport default function Filter({ filter, onChange }) {\r\n  return (\r\n    <label>\r\n      <FilterContainer>\r\n        <h3>Find contacts by name</h3>\r\n        <InputDiv>\r\n          <IconContext.Provider value={{ size: '23px' }}>\r\n            <FcSearch />\r\n          </IconContext.Provider>\r\n          &nbsp;\r\n          <Input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={onChange}\r\n            placeholder=\"Search contact\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </InputDiv>\r\n      </FilterContainer>\r\n    </label>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ContainerCustom = styled.div`\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  background-color: rgb(0 0 0 / 12%);\r\n  background-image: linear-gradient(28deg, #a8ff36, transparent);\r\n  border: 2px solid #4a4a4a;\r\n  border-radius: 5px;\r\n  max-width: 400px;\r\n`\r\n","import { ContainerCustom } from './Container.sstyled'\r\n\r\nfunction Container({ children }) {\r\n  return <ContainerCustom>{children}</ContainerCustom>\r\n}\r\n\r\nexport default Container\r\n","import React, { Component } from 'react'\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport ContactList from './components/ContactList/ContactList'\r\nimport Filter from './components/Filter/Filter'\r\nimport Container from './components/Container/Container'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' }],\r\n    filter: '',\r\n  }\r\n\r\n  // findContact = () => {\r\n  //   const {contacts} = this.state\r\n  //   return this.setState({contacts.find(contact => contact.name.includes(name))})\r\n  // }\r\n  handleChange = ({ currentTarget }) => {\r\n    const value = currentTarget.value\r\n    const name = currentTarget.name\r\n    // console.log('value=>', value)\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  //   addContact = () => {\r\n  //     this.setState((prevState) => ({\r\n  //       contacts: [...prevState.contacts, this.state.name],\r\n  //     }))\r\n  //   }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const randomID = uuidv4()\r\n\r\n    const { name, number, contacts } = this.state\r\n    // const findContact = contacts.find((contact) => console.log(contact.name))\r\n    // const findContact = contacts.find((contact) => contact.name.includes(name))\r\n    // console.log(findContact)\r\n\r\n    const findContact = contacts.find((contact) => contact.name.includes(name))\r\n\r\n    findContact\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState({\r\n          contacts: [...contacts, { id: randomID, name: name, number: number }],\r\n        })\r\n    this.clearForm()\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({ number: '', name: '' })\r\n  }\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId,\r\n      ),\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { name, number, filter } = this.state\r\n    const visibleContacts = this.getVisibleContacts()\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          onSubmit={this.handleSubmit}\r\n          // contacts={contacts}\r\n          name={name}\r\n          number={number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={this.handleChange} filter={filter} />\r\n        <ContactList contacts={visibleContacts} onClick={this.deleteContact} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}