{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Container/Container.sstyled.jsx","components/Container/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CustomButton","styled","button","Button","onClick","text","Form","form","InputDiv","div","Input","input","ContactForm","state","name","number","handleChange","target","value","console","log","setState","handleSubmit","e","preventDefault","onSubmit","props","clearForm","this","Provider","size","type","onChange","pattern","title","required","autoComplete","Component","List","ul","Item","li","ContactList","contacts","map","contact","id","FilterContainer","Filter","filter","placeholder","ContainerCustom","Container","children","App","currentTarget","newContact","uuidv4","find","includes","alert","prevState","getVisibleContacts","normalizedFilter","toLowerCase","deleteContact","contactId","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18722f1f.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const CustomButton = styled.button`\r\n  font-weight: 400;\r\n  line-height: 1.33;\r\n\r\n  background-color: orange;\r\n  margin-top: 15px;\r\n  margin-left: 27px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\r\n    0px 2px 1px rgb(0 0 0 / 20%);\r\n    &:focus,\r\n  &:hover {\r\n    box-shadow: 2px 3px 17px 0px rgb(0 0 0 / 78%), -1px 0px 2px rgb(0 0 0 / 14%), 0px 2px 1px rgb(0 0 0 / 20%);\r\n    transition: box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`\r\n","import React from 'react'\r\nimport { CustomButton } from './Button.styled'\r\n\r\nfunction Button({ onClick, text }) {\r\n  return <CustomButton onClick={onClick}>{text}</CustomButton>\r\n}\r\n\r\nexport default Button\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Form = styled.form`background - color: #fff;\r\npadding: 15px;`\r\n\r\nexport const InputDiv = styled.div`\r\n  display: flex;\r\n`\r\nexport const Input = styled.input`\r\n \r\n  padding: 3px 10px;\r\n border: 2px solid rgba(33, 33, 33, 0.2);\r\n box-sizing: border-box;\r\n  border-radius: 4px;\r\n  &:focus,\r\n  &:hover {\r\n    border-color: #00adffa8;\r\n    outline: none;\r\n    transition: border-color 350ms cubic-bezier(0.4, 0, 0.2, 1);`\r\n","import React, { Component } from 'react'\r\nimport Button from '../Button/Button'\r\n// import { List } from './ContactForm.styled'\r\nimport { FcPhoneAndroid, FcBusinessContact } from 'react-icons/fc'\r\nimport { IconContext } from 'react-icons'\r\nimport { Form, InputDiv, Input } from './ContactForm.styled'\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n  handleChange = ({ target }) => {\r\n    const value = target.value\r\n    const name = target.name\r\n    console.log('value=>', value)\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { onSubmit } = this.props\r\n    onSubmit(this.state.name, this.state.number)\r\n    this.clearForm()\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({ number: '', name: '' })\r\n  }\r\n\r\n  render() {\r\n    const { number, name } = this.state\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <h2>Name</h2>\r\n            <InputDiv>\r\n              <IconContext.Provider value={{ size: '23px' }}>\r\n                <FcBusinessContact />\r\n              </IconContext.Provider>\r\n              &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                autoComplete=\"off\"\r\n              />\r\n            </InputDiv>\r\n          </label>\r\n\r\n          <label>\r\n            <h2>Number</h2>\r\n            <InputDiv>\r\n              <IconContext.Provider value={{ size: '23px' }}>\r\n                <FcPhoneAndroid />\r\n              </IconContext.Provider>\r\n              &nbsp;\r\n              <Input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                autoComplete=\"off\"\r\n              />\r\n            </InputDiv>\r\n          </label>\r\n          <Button text=\"Add contact\" />\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const List = styled.ul`\r\n  border-radius: 4px;\r\n  padding: 24px;\r\n  //   background-color: #7c7c7c;\r\n  //   color: #fff;\r\n`\r\nexport const Item = styled.li`\r\n  display: flex;\r\n\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  font-weight: normal;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n`\r\n","import React, { Component } from 'react'\r\nimport { List, Item } from './ContactList.styled'\r\nimport Button from '../Button/Button'\r\n\r\nexport default class ContactList extends Component {\r\n  render() {\r\n    const { contacts, onClick } = this.props\r\n\r\n    return (\r\n      <List>\r\n        {contacts.map((contact) => (\r\n          <Item key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <Button\r\n              type=\"button\"\r\n              text=\"Delete\"\r\n              onClick={() => onClick(contact.id)}\r\n            />\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const FilterContainer = styled.div`\r\n  padding: 15px;\r\n`\r\n","import React from 'react'\r\nimport { FcSearch } from 'react-icons/fc'\r\nimport { InputDiv } from '../ContactForm/ContactForm.styled'\r\nimport { Input } from '../ContactForm/ContactForm.styled'\r\nimport { FilterContainer } from './Filter.styled'\r\nimport { IconContext } from 'react-icons'\r\n\r\nexport default function Filter({ filter, onChange }) {\r\n  return (\r\n    <label>\r\n      <FilterContainer>\r\n        <h3>Find contacts by name</h3>\r\n        <InputDiv>\r\n          <IconContext.Provider value={{ size: '23px' }}>\r\n            <FcSearch />\r\n          </IconContext.Provider>\r\n          &nbsp;\r\n          <Input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={onChange}\r\n            placeholder=\"Search contact\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </InputDiv>\r\n      </FilterContainer>\r\n    </label>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ContainerCustom = styled.div`\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  background-color: rgb(0 0 0 / 12%);\r\n  background-image: linear-gradient(28deg, #a8ff36, transparent);\r\n  border: 2px solid #4a4a4a;\r\n  border-radius: 5px;\r\n  max-width: 400px;\r\n`\r\n","import { ContainerCustom } from './Container.sstyled'\r\n\r\nfunction Container({ children }) {\r\n  return <ContainerCustom>{children}</ContainerCustom>\r\n}\r\n\r\nexport default Container\r\n","import React, { Component } from 'react'\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport ContactList from './components/ContactList/ContactList'\r\nimport Filter from './components/Filter/Filter'\r\nimport Container from './components/Container/Container'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' }],\r\n    filter: '',\r\n  }\r\n\r\n  handleChange = ({ currentTarget }) => {\r\n    const value = currentTarget.value\r\n    const name = currentTarget.name\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = (name, number) => {\r\n    const randomID = uuidv4()\r\n    const newContact = { id: randomID, name, number }\r\n\r\n    const findContact = this.state.contacts.find((contact) =>\r\n      contact.name.includes(name),\r\n    )\r\n\r\n    findContact\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState((prevState) => ({\r\n          contacts: [...prevState.contacts, newContact],\r\n        }))\r\n  }\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId,\r\n      ),\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { filter } = this.state\r\n    const visibleContacts = this.getVisibleContacts()\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.handleSubmit} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={this.handleChange} filter={filter} />\r\n        <ContactList contacts={visibleContacts} onClick={this.deleteContact} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}