{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Container/Container.sstyled.jsx","components/Container/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CustomButton","styled","button","Button","onClick","text","Form","form","ContactForm","this","props","onSubmit","onChange","name","contacts","number","type","value","pattern","title","required","Component","List","ul","Item","li","ContactList","state","isShow","show","setState","map","contact","id","ContainerCustom","div","Container","children","App","filter","handleChange","target","handleSubmit","e","preventDefault","randomID","uuidv4","prev","clearForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70df08da.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const CustomButton = styled.button`\r\n  font-weight: 400;\r\n  line-height: 1.33;\r\n  display: block;\r\n  background-color: orange;\r\n  margin-top: 15px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\r\n    0px 2px 1px rgb(0 0 0 / 20%);\r\n`\r\n","import React from 'react'\r\nimport { CustomButton } from './Button.styled'\r\n\r\nfunction Button({ onClick, text }) {\r\n  return <CustomButton onClick={onClick}>{text}</CustomButton>\r\n}\r\n\r\nexport default Button\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Form = styled.form`background - color: #fff;\r\npadding: 15px;`\r\n","import React, { Component } from 'react'\r\nimport Button from '../Button/Button'\r\n// import { List } from './ContactForm.styled'\r\nimport { Form } from './ContactForm.styled'\r\n\r\nexport default class ContactForm extends Component {\r\n  //   state = {\r\n  //     contacts: [\r\n  //       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  //       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  //     ],\r\n  //     name: '',\r\n  //     number: '',\r\n  //   }\r\n\r\n  //   handleChange = ({ target }) => {\r\n  //     const value = target.value\r\n  //     const name = target.name\r\n  //     console.log('value=>', value)\r\n  //     this.setState({\r\n  //       [name]: value,\r\n  //     })\r\n  //   }\r\n\r\n  //   handleSubmit = (e) => {\r\n  //     const { number, name } = this.state\r\n  //     e.preventDefault()\r\n  //     this.setState({\r\n  //       contacts: [...contacts, {name, number}],\r\n  //       name: '',\r\n  //       number: '',\r\n  //     }))\r\n  //   }\r\n\r\n  render() {\r\n    const { onSubmit, onChange, onClick, contacts, name, number } = this.props\r\n    return (\r\n      <div>\r\n        <Form onSubmit={onSubmit}>\r\n          <label>\r\n            <h2>Name</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={onChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <h2>Number</h2>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={onChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <Button text=\"Add contact\" />\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// class ContactForm extend Component({ onClick }) {\r\n//   return (\r\n//     <div>\r\n//       <h2>Name</h2>\r\n//       <Form>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//           required\r\n//         />\r\n//         <Button text=\"Add contact\" type=\"button\" onClick={onClick} />\r\n//       </Form>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default ContactForm\r\n","import styled from '@emotion/styled'\r\n\r\nexport const List = styled.ul`\r\n  display: block;\r\n  border-radius: 4px;\r\n  padding: 24px;\r\n  //   background-color: #7c7c7c;\r\n  //   color: #fff;\r\n`\r\nexport const Item = styled.li`\r\n  font-weight: normal;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n`\r\n","import React, { Component } from 'react'\r\nimport { List, Item } from './ContactList.styled'\r\n\r\nexport default class ContactList extends Component {\r\n  state = {\r\n    isShow: false,\r\n  }\r\n\r\n  show = () => {\r\n    this.setState({\r\n      isShow: true,\r\n    })\r\n  }\r\n  render() {\r\n    const { contacts } = this.props\r\n    const { isShow } = this.state\r\n    return (\r\n      <List>\r\n        {contacts === ''\r\n          ? isShow\r\n          : contacts.map((contact) => (\r\n              <Item key={contact.id}>\r\n                {contact.name}: {contact.number}\r\n              </Item>\r\n            ))}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\n//=========================================================================\r\n// function ContactList({ contacts, name }) {\r\n//   return (\r\n//     <List>\r\n//       {contacts.map((contact) => (\r\n//         <li>{contact}</li>\r\n//       ))}\r\n//     </List>\r\n//   )\r\n// }\r\n\r\n// export default ContactList\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ContainerCustom = styled.div`\r\n  margin: 0 auto;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  max-width: 400px;\r\n`\r\n","import { ContainerCustom } from './Container.sstyled'\r\n\r\nfunction Container({ children }) {\r\n  return <ContainerCustom>{children}</ContainerCustom>\r\n}\r\n\r\nexport default Container\r\n","import React, { Component } from 'react'\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport ContactList from './components/ContactList/ContactList'\r\nimport Container from './components/Container/Container'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const value = target.value\r\n    const name = target.name\r\n    // console.log('value=>', value)\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  //   addContact = () => {\r\n  //     this.setState((prevState) => ({\r\n  //       contacts: [...prevState.contacts, this.state.name],\r\n  //     }))\r\n  //   }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const randomID = uuidv4()\r\n\r\n    const { name, number } = this.state\r\n    this.setState((prev) => ({\r\n      contacts: [\r\n        ...prev.contacts,\r\n        { id: randomID, name: this.state.name, number: this.state.number },\r\n      ],\r\n    }))\r\n    this.clearForm()\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({ number: '', name: '' })\r\n  }\r\n\r\n  render() {\r\n    const { contacts, name, number } = this.state\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          onSubmit={this.handleSubmit}\r\n          contacts={contacts}\r\n          name={name}\r\n          number={number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        {/* <Filter /> */}\r\n        <ContactList contacts={contacts} name={name} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}